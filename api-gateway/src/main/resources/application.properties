server.port=8080
spring.application.name=api-gateway

# Eureka Client config
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.prefer-ip-address=true

logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefintionLocator = INFO
logging.level.org.springframework.cloud.gateway = TRACE
logging.level.com.netflix.discovery=DEBUG

## Product Service Route
spring.cloud.gateway.server.webflux.routes[0].id=product-service
spring.cloud.gateway.server.webflux.routes[0].uri=lb://product-service
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/api/product/**

## Order Service Route
spring.cloud.gateway.server.webflux.routes[1].id=order-service
spring.cloud.gateway.server.webflux.routes[1].uri=lb://order-service
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/api/order/**

## Inventory Service Route
spring.cloud.gateway.server.webflux.routes[2].id=inventory-service
spring.cloud.gateway.server.webflux.routes[2].uri=lb://inventory-service
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/api/inventory/**

## Discovery Service Route
spring.cloud.gateway.server.webflux.routes[3].id=discovery-service
spring.cloud.gateway.server.webflux.routes[3].uri=http://localhost:8761
spring.cloud.gateway.server.webflux.routes[3].predicates[0]=Path=/eureka/web
spring.cloud.gateway.server.webflux.routes[3].filters[0]=SetPath=/

## Discovery Service Route
spring.cloud.gateway.server.webflux.routes[4].id=discovery-service-static
spring.cloud.gateway.server.webflux.routes[4].uri=http://localhost:8761
spring.cloud.gateway.server.webflux.routes[4].predicates[0]=Path=/eureka/**

## Keycloak Resources
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/spring-boot-microservices-realme/protocol/openid-connect/certs
